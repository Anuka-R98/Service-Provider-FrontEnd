{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/service.service\";\nimport * as i2 from \"src/app/services/user-auth.service\";\nimport * as i3 from \"ngx-toastr\";\nfunction EditServiceComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditServiceComponent_div_9_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name must be at least 5 characters long\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditServiceComponent_div_9_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name cannot be more than 50 characters long\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditServiceComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, EditServiceComponent_div_9_div_1_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(2, EditServiceComponent_div_9_div_2_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(3, EditServiceComponent_div_9_div_3_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.service.get(\"name\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.service.get(\"name\").errors.minlength);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.service.get(\"name\").errors.maxlength);\n  }\n}\nfunction EditServiceComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Description is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditServiceComponent_div_14_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Description must be at least 10 characters long\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditServiceComponent_div_14_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Description cannot be more than 500 characters long\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditServiceComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, EditServiceComponent_div_14_div_1_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(2, EditServiceComponent_div_14_div_2_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(3, EditServiceComponent_div_14_div_3_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.service.get(\"description\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.service.get(\"description\").errors.minlength);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.service.get(\"description\").errors.maxlength);\n  }\n}\nfunction EditServiceComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Phone number is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditServiceComponent_div_19_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid Phone number format\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditServiceComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, EditServiceComponent_div_19_div_1_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(2, EditServiceComponent_div_19_div_2_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.service.get(\"phoneNo\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.service.get(\"phoneNo\").errors.pattern);\n  }\n}\nfunction EditServiceComponent_div_20_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"averageRating must be between 0 and 10\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditServiceComponent_div_20_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, EditServiceComponent_div_20_div_4_div_1_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.service.get(\"averageRating\").errors.pattern);\n  }\n}\nfunction EditServiceComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"label\", 16);\n    i0.ɵɵtext(2, \"Change average rating value\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function EditServiceComponent_div_20_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.service1.averageRating = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, EditServiceComponent_div_20_div_4_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.service1.averageRating);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.service.get(\"averageRating\").invalid && (ctx_r3.service.get(\"averageRating\").dirty || ctx_r3.service.get(\"averageRating\").touched));\n  }\n}\nconst _c0 = function () {\n  return [\"ROLE_ADMIN\"];\n};\nexport let EditServiceComponent = /*#__PURE__*/(() => {\n  class EditServiceComponent {\n    constructor(serviceService, userAuthService, toastr) {\n      this.serviceService = serviceService;\n      this.userAuthService = userAuthService;\n      this.toastr = toastr;\n      this.service = new FormGroup({\n        name: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(50)]),\n        description: new FormControl('', [Validators.required, Validators.minLength(10), Validators.maxLength(500)]),\n        phoneNo: new FormControl('', [Validators.required, Validators.pattern(/^\\d{10}$/)]),\n        averageRating: new FormControl('', [Validators.pattern('^(10|[0-9](\\.[0-9])?)$')])\n      });\n    }\n    ngOnInit() {}\n    saveService() {\n      if (this.userAuthService.roleMatch(['ROLE_ADMIN'])) {\n        this.updateServiceByAdmin();\n      } else {\n        this.updateServicebyProvider();\n      }\n    }\n    updateServiceByAdmin() {\n      if (this.service.valid) {\n        const existingService = {\n          name: this.service.value.name,\n          description: this.service.value.description,\n          phoneNo: this.service.value.phoneNo,\n          averageRating: parseFloat(this.service.value.averageRating)\n        };\n        this.serviceService.updateServiceByAdmin(this.service1.id, existingService).subscribe(resonse => {\n          console.log(existingService);\n          const createdService = resonse;\n          this.toastr.success(`Service ${createdService.name} created successfully!`, 'Success');\n        }, error => {\n          this.toastr.error('Error creating service!', 'Error');\n          console.log(error);\n        });\n      } else {\n        this.toastr.error('Service details are invalid !', 'Error');\n      }\n    }\n    updateServicebyProvider() {\n      if (this.service.valid) {\n        const existingService = {\n          name: this.service.value.name,\n          description: this.service.value.description,\n          phoneNo: this.service.value.phoneNo\n        };\n        this.serviceService.updateService(this.service1.id, existingService).subscribe(resonse => {\n          console.log(existingService);\n          const createdService = resonse;\n          this.toastr.success(`Service ${createdService.name} created successfully!`, 'Success');\n        }, error => {\n          this.toastr.error('Error creating service!', 'Error');\n          console.log(error);\n        });\n      } else {\n        this.toastr.error('Service details are invalid !', 'Error');\n      }\n    }\n  }\n  EditServiceComponent.ɵfac = function EditServiceComponent_Factory(t) {\n    return new (t || EditServiceComponent)(i0.ɵɵdirectiveInject(i1.ServiceService), i0.ɵɵdirectiveInject(i2.UserAuthService), i0.ɵɵdirectiveInject(i3.ToastrService));\n  };\n  EditServiceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditServiceComponent,\n    selectors: [[\"app-edit-service\"]],\n    inputs: {\n      service1: \"service1\"\n    },\n    decls: 24,\n    vars: 9,\n    consts: [[1, \"col-md-12\"], [1, \"card\", \"card-container\"], [2, \"description-align\", \"center\", \"padding-bottom\", \"20px\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"description\", \"id\", \"name\", \"name\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Enter name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"description\"], [\"type\", \"description\", \"formControlName\", \"description\", \"placeholder\", \"Enter description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"phoneNo\"], [\"type\", \"description\", \"formControlName\", \"phoneNo\", \"placeholder\", \"Enter Phone number\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"form-group\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-lg\", 3, \"click\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"], [\"for\", \"averageRating\"], [\"type\", \"averageRating\", \"formControlName\", \"averageRating\", \"placeholder\", \"Enter averageRating\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function EditServiceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"Edit Service Details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 3)(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Service Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function EditServiceComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.service1.name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, EditServiceComponent_div_9_Template, 4, 3, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 8);\n        i0.ɵɵtext(12, \"Brief description about your service\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function EditServiceComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.service1.description = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, EditServiceComponent_div_14_Template, 4, 3, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 10);\n        i0.ɵɵtext(17, \"Contact Phone No\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function EditServiceComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.service1.phoneNo = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, EditServiceComponent_div_19_Template, 3, 2, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, EditServiceComponent_div_20_Template, 5, 2, \"div\", 12);\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function EditServiceComponent_Template_button_click_22_listener() {\n          return ctx.saveService();\n        });\n        i0.ɵɵtext(23, \" Save \");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.service);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.service1.name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.service.get(\"name\").invalid && (ctx.service.get(\"name\").dirty || ctx.service.get(\"name\").touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.service1.description);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.service.get(\"description\").invalid && (ctx.service.get(\"description\").dirty || ctx.service.get(\"description\").touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.service1.phoneNo);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.service.get(\"phoneNo\").invalid && (ctx.service.get(\"phoneNo\").dirty || ctx.service.get(\"phoneNo\").touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.userAuthService.roleMatch(i0.ɵɵpureFunction0(8, _c0)));\n      }\n    },\n    styles: [\".card-container[_ngcontent-%COMP%]{margin:50px auto;max-width:600px;padding:30px;background-color:#fff;border-radius:5px;box-shadow:0 2px 4px #0003}h1[_ngcontent-%COMP%]{font-size:36px;font-weight:700;margin-bottom:30px;color:#2c3e50}.profile-img-card[_ngcontent-%COMP%]{width:100px;height:100px;margin:0 auto 30px;display:block;border-radius:50%;object-fit:cover;background-color:#f1f1f1}.form-group[_ngcontent-%COMP%]{margin-bottom:30px}label[_ngcontent-%COMP%]{font-size:18px;font-weight:700;display:block;margin-bottom:10px;color:#2c3e50}input[type=text][_ngcontent-%COMP%], input[type=email][_ngcontent-%COMP%], input[type=password][_ngcontent-%COMP%]{width:100%;height:50px;font-size:16px;color:#555;border:none;border-bottom:2px solid #ccc;padding:5px 0;background-color:transparent}input[type=radio][_ngcontent-%COMP%]{margin-right:10px}.alert-danger[_ngcontent-%COMP%]{font-size:16px;color:#dc3545;margin-top:5px}.btn-primary[_ngcontent-%COMP%]{font-size:18px;font-weight:700;padding:10px 30px;border-radius:5px;background-color:#3498db;border:none;cursor:pointer;transition:all .3s ease-in-out}.btn-primary[_ngcontent-%COMP%]:hover{background-color:#2980b9}@media (max-width: 767px){.card-container[_ngcontent-%COMP%]{padding:20px}h1[_ngcontent-%COMP%]{font-size:28px;margin-bottom:20px}.profile-img-card[_ngcontent-%COMP%]{width:80px;height:80px;margin-bottom:20px}input[type=text][_ngcontent-%COMP%], input[type=email][_ngcontent-%COMP%], input[type=password][_ngcontent-%COMP%]{height:40px;font-size:14px}.btn-primary[_ngcontent-%COMP%]{font-size:16px;padding:8px 20px}}.radio-table[_ngcontent-%COMP%]{display:table;width:100%;border-collapse:separate;border-spacing:10px}.radio-table-row[_ngcontent-%COMP%]{display:table-row}.radio-table-label[_ngcontent-%COMP%], .radio-table-input[_ngcontent-%COMP%]{display:table-cell;vertical-align:middle}.radio-table-label[_ngcontent-%COMP%]{font-size:18px;font-weight:700;color:#2c3e50}.radio-table-input[_ngcontent-%COMP%]   input[type=radio][_ngcontent-%COMP%]{margin-right:10px}.form-check-inline[_ngcontent-%COMP%]{display:inline-flex;align-items:center;justify-content:space-between}.btn-primary[_ngcontent-%COMP%]:hover{background-color:#fca80d;border-color:orange}\"]\n  });\n  return EditServiceComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}