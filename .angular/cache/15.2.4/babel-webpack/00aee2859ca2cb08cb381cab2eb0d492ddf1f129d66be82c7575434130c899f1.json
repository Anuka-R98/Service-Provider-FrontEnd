{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(httpclient) {\n      this.httpclient = httpclient;\n      this.PATH_OF_API = environment.apiBaseUser + 'api/auth';\n      this.PATH_OF_API_USER = environment.apiBaseUser + 'users';\n      this.PATH_OF_API_ADMIN = 'environment.apiBaseUser + ';\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n    login(loginData) {\n      return this.httpclient.post(this.PATH_OF_API + '/signin', loginData, this.httpOptions);\n    }\n    createUser(user) {\n      return this.httpclient.post(this.PATH_OF_API + '/signup', user).pipe(tap(response => {\n        console.log(response);\n      }), catchError(error => {\n        console.log(error);\n        return of(null);\n      }));\n    }\n    getUsers() {\n      return this.httpclient.get(this.PATH_OF_API_ADMIN + '/users');\n    }\n    updateUser(user, id) {\n      console.log(user, id);\n      return this.httpclient.put(`${this.PATH_OF_API_USER}/${id}`, user);\n    }\n    updateUserByAdmin(user, id) {\n      return this.httpclient.put(`${this.PATH_OF_API_ADMIN}/users/${id}`, user);\n    }\n    deleteUser(id) {\n      return this.httpclient.delete(`${this.PATH_OF_API_ADMIN}/users/${id}`);\n    }\n    forUser() {\n      return this.httpclient.get(this.PATH_OF_API + '/forUser', {\n        responseType: 'text'\n      });\n    }\n    forAdmin() {\n      return this.httpclient.get(this.PATH_OF_API + '/forAdmin', {\n        responseType: 'text'\n      });\n    }\n  }\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}