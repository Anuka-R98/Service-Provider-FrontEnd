{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet AddUserComponent = class AddUserComponent {\n  // custom validator function\n  matchPassword(control) {\n    const password = control.root.get('password');\n    const confirmPassword = control.value;\n    if (password && confirmPassword && password.value !== confirmPassword) {\n      return {\n        mismatchedPasswords: true\n      };\n    }\n    return null;\n  }\n  constructor(userAuthService, userService, toastr) {\n    this.userAuthService = userAuthService;\n    this.userService = userService;\n    this.toastr = toastr;\n    this.user = new FormGroup({\n      username: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(20)]),\n      email: new FormControl('', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$')]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(12), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{6,30}$')]),\n      confirmPassword: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(12), this.matchPassword.bind(this)]),\n      phoneNo: new FormControl('', [Validators.required, Validators.pattern(/^\\d{10}$/)]),\n      role: new FormControl('user', Validators.required)\n    });\n    this.showAlert = false;\n  }\n  ngOnInit() {}\n  saveUser() {\n    if (this.userAuthService.roleMatch(['ROLE_ADMIN'])) {\n      this.addUserByAdmin();\n    } else {\n      alert(\"Unauthorized ! Only admin can add users !\");\n    }\n  }\n  closeAlert() {\n    this.showAlert = false;\n  }\n  addUserByAdmin() {\n    if (this.user.valid) {\n      const newUser = {\n        username: this.user.value.username,\n        email: this.user.value.email,\n        password: this.user.value.password,\n        phoneNo: this.user.value.phoneNo,\n        roles: [this.user.value.role]\n      };\n      this.userService.createUser(newUser).subscribe(response => {\n        console.log(newUser);\n        this.showAlert = true;\n        const createdUser = response;\n        this.toastr.success(`User ${createdUser.username} created successfully!`, 'Success');\n      }, error => {\n        this.toastr.error('Error creating user!', 'Error');\n        console.log(error);\n      });\n    } else {\n      this.toastr.error('User details are invalid !', 'Error');\n    }\n  }\n};\nAddUserComponent = __decorate([Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})], AddUserComponent);\nexport { AddUserComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}